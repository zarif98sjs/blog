<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>topsort on Convoluted Mess</title>
    <link>https://zarif98sjs.github.io/blog/tags/topsort/</link>
    <description>Recent content in topsort on Convoluted Mess</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 25 Nov 2018 00:00:00 +0000</lastBuildDate><atom:link href="https://zarif98sjs.github.io/blog/tags/topsort/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LightOj 1034 (Hit the Light Switches)</title>
      <link>https://zarif98sjs.github.io/blog/blog/lightoj1034/</link>
      <pubDate>Sun, 25 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://zarif98sjs.github.io/blog/blog/lightoj1034/</guid>
      <description>Idea  Topological Sort / Strongly Connected Component
 To visit all node we can simply touch minimum number of node by using topological sort.
OR just find the number of SCC  /**Which of the favors of your Lord will you deny ?**/ #include&amp;lt;bits/stdc++.h&amp;gt;using namespace std; #define LL long long #define PII pair&amp;lt;int,int&amp;gt; #define MP make_pair #define F first #define S second  vector&amp;lt;int&amp;gt;adj[100010]; bool visited[10010]; stack&amp;lt;int&amp;gt;stk; void dfs1(int node) { visited[node]=true; for(int next:adj[node]) { if(visited[next]==false) dfs1(next); } stk.</description>
    </item>
    
  </channel>
</rss>
