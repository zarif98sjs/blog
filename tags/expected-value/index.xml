<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>expected value on zarif98sjs</title>
    <link>https://zarif98sjs.github.io/blog/tags/expected-value/</link>
    <description>Recent content in expected value on zarif98sjs</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 21 Jun 2020 00:00:00 +0000</lastBuildDate><atom:link href="https://zarif98sjs.github.io/blog/tags/expected-value/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>LightOj 1248 (Dice III)</title>
      <link>https://zarif98sjs.github.io/blog/blog/lightoj1248/</link>
      <pubDate>Sun, 21 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://zarif98sjs.github.io/blog/blog/lightoj1248/</guid>
      <description>Idea   First expected value problem I solved was this
Now , I took idea from that problem and solved it by converting this problem to that problem . Another way to look at this problem is there are n 1&amp;rsquo;s and in one move we can make any 1 to 0 . Now the question becomes the expected value of all becoming 0 .  /** Which of the favors of your Lord will you deny ?</description>
    </item>
    
    <item>
      <title>LightOj 1030 (Discovering Gold)</title>
      <link>https://zarif98sjs.github.io/blog/blog/lightoj1030/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://zarif98sjs.github.io/blog/blog/lightoj1030/</guid>
      <description>Idea  Expected Value
 The expectation at i is E(i) = (E(i+1) + E(i+2) + E(i+3) + E(i+4) + E(i+5) + E(i+6)) / cnt + gold[i]
where cnt is how many of E(i+x) is valid  /**Which of the favors of your Lord will you deny ?**/ #include&amp;lt;bits/stdc++.h&amp;gt;using namespace std; #define LL long long #define PII pair&amp;lt;int,int&amp;gt; #define PLL pair&amp;lt;LL,LL&amp;gt; #define MP make_pair #define F first #define S second #define INF INT_MAX  inline void optimizeIO() { ios_base::sync_with_stdio(false); cin.</description>
    </item>
    
  </channel>
</rss>
